# This is a basic workflow to help you get started with Actions

name: Test Update GitOps Repo

on:          
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/**'      
      - 'badges/*'      
      - 'pom.xml'
      - '*.svg'
      - '*.json'
      - '*.md'
  workflow_dispatch: 
  
env:
  MANAGE_BRANCH: master
  ARTIFACT_NAME: api-demo-java11
  CONTAINER_REGISTRY : gableesaving.azurecr.io
  CONTAINER_REPO: gableesaving.azurecr.io/api-demo-java11
  MANAGE_HOME_PATH : api-demo-java11
  POM_VERSION_LINE_NUMBER: 13
  
jobs:
  generate-version:
    runs-on: ubuntu-latest    
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:                  
          repository: e-saving/gitops_deployment          
          ref: master
          token: ${{ secrets.CHECKOUT_PAT }}        

      - name: Generate new version
        run: | 
            ls -l
            cd ${{ env.MANAGE_HOME_PATH }}
            pwd
            ls -l
            image_repo=$(cat values.yaml|grep image|awk -F' ' '{print($2)}')
            image_val=$(echo $image_repo|awk -F'/' '{print($2)}')            
            image_name=$(echo $image_val|awk -F':' '{print($1)}')
            image_tag=$(echo $image_val|awk -F':' '{print($2)}')            
            echo "image_val=${image_val}"            
            echo "image_name=${image_name}"
            echo "image_tag=${image_tag}"
            new_image_val="${image_name}:0.0.4"
            sed -i "s/${image_val}/${new_image_val}/g" values.yaml
            
      - name: Check new version
        run: | 
            ls -l
            cd ${{ env.MANAGE_HOME_PATH }}
            pwd
            ls -l
            image_repo=$(cat values.yaml|grep image|awk -F' ' '{print($2)}')
            image_val=$(echo $image_repo|awk -F'/' '{print($2)}')            
            image_name=$(echo $image_val|awk -F':' '{print($1)}')
            image_tag=$(echo $image_val|awk -F':' '{print($2)}')            
            echo "image_val=${image_val}"            
            echo "image_name=${image_name}"
            echo "image_tag=${image_tag}"   

            
      #- name: Upload version artifact
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: version          
      #    path: version
          

